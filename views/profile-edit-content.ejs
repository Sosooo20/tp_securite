<!-- Profil de l'utilisateur -->
<div class="profile-container">
    <!-- En-tÃªte du profil -->
    <div class="profile-header">
        <div class="profile-image-section">
            <div class="profile-image-container" onclick="document.getElementById('profileImageInput').click()">
                <% if (user.image) { %>
                    <img src="<%= user.image %>" alt="Photo de profil" class="profile-image" id="currentImage">
                <% } else { %>
                    <img src="/images/default-avatar.png" alt="Avatar par dÃ©faut" class="profile-image" id="currentImage">
                <% } %>
                <div class="image-overlay">
                    ðŸ“· Changer la photo
                </div>
            </div>
        </div>
        
        <div class="profile-info">
            <h1>Modifier mon profil</h1>
            <p>Mettez Ã  jour vos informations personnelles</p>
            <p><strong>Membre depuis:</strong> <%= new Date(user.created_at).toLocaleDateString('fr-FR') %></p>
        </div>
    </div>

    <!-- Formulaire d'Ã©dition -->
    <form id="profileForm" enctype="multipart/form-data">
        <input type="hidden" name="csrf_token" value="<%= csrfToken %>">
        
        <!-- Input cachÃ© pour l'image -->
        <input type="file" id="profileImageInput" name="profileImage" class="hidden-file-input" accept="image/jpeg,image/jpg,image/png,image/webp">
        
        <!-- Nom et PrÃ©nom -->
        <div class="form-row">
            <div class="form-group">
                <label for="nom">Nom *</label>
                <input type="text" id="nom" name="nom" value="<%= user.nom %>" required maxlength="100">
            </div>
            <div class="form-group">
                <label for="prenom">PrÃ©nom *</label>
                <input type="text" id="prenom" name="prenom" value="<%= user.prenom %>" required maxlength="100">
            </div>
        </div>

        <!-- Email -->
        <div class="form-group">
            <label for="email">Email *</label>
            <input type="email" id="email" name="email" value="<%= user.email %>" required maxlength="255">
        </div>

        <!-- Description -->
        <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" name="description" placeholder="Parlez-nous un peu de vous..." maxlength="1000"><%= user.description || '' %></textarea>
        </div>

        <!-- Boutons -->
        <div class="btn-container">
            <a href="/" class="btn btn-secondary">Annuler</a>
            <button type="submit" class="btn btn-primary">Enregistrer les modifications</button>
        </div>
    </form>
</div>

<!-- Toast pour les notifications -->
<div id="toast" class="toast"></div>

<script>
// PrÃ©visualisation de l'image
document.getElementById('profileImageInput').addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
        // VÃ©rification de la taille (2MB max)
        if (file.size > 2 * 1024 * 1024) {
            showToast('Le fichier est trop volumineux. Taille maximum: 2MB', 'error');
            return;
        }
        
        // VÃ©rification du type
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
        if (!allowedTypes.includes(file.type)) {
            showToast('Format non supportÃ©. Utilisez JPG, PNG ou WebP', 'error');
            return;
        }
        
        // PrÃ©visualisation
        const reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById('currentImage').src = e.target.result;
        };
        reader.readAsDataURL(file);
    }
});

// Soumission du formulaire
document.getElementById('profileForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const submitBtn = this.querySelector('button[type="submit"]');
    
    // DÃ©sactiver le bouton pendant la soumission
    submitBtn.disabled = true;
    submitBtn.textContent = 'Enregistrement...';
    
    try {
        const response = await fetch('/profile/edit', {
            method: 'POST',
            body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
            showToast(result.message, 'success');
            // Redirection aprÃ¨s 2 secondes
            setTimeout(() => {
                window.location.href = '/';
            }, 2000);
        } else {
            showToast(result.message, 'error');
        }
    } catch (error) {
        console.error('Erreur:', error);
        showToast('Erreur rÃ©seau. Veuillez rÃ©essayer.', 'error');
    } finally {
        // RÃ©activer le bouton
        submitBtn.disabled = false;
        submitBtn.textContent = 'Enregistrer les modifications';
    }
});

// Fonction pour afficher les toasts
function showToast(message, type) {
    const toast = document.getElementById('toast');
    toast.textContent = message;
    toast.className = `toast ${type}`;
    toast.classList.add('show');
    
    setTimeout(() => {
        toast.classList.remove('show');
    }, 4000);
}

// Validation en temps rÃ©el
document.getElementById('nom').addEventListener('input', function() {
    validateName(this);
});

document.getElementById('prenom').addEventListener('input', function() {
    validateName(this);
});

document.getElementById('email').addEventListener('input', function() {
    validateEmail(this);
});

function validateName(input) {
    const name = input.value.trim();
    const isValid = name.length >= 2 && name.length <= 100 && /^[a-zA-ZÃ€-Ã¿\s'-]+$/.test(name);
    
    if (name.length > 0 && !isValid) {
        input.style.borderColor = '#dc3545';
    } else {
        input.style.borderColor = '#ddd';
    }
    
    return isValid;
}

function validateEmail(input) {
    const email = input.value.trim();
    const isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email) && email.length <= 255;
    
    if (email.length > 0 && !isValid) {
        input.style.borderColor = '#dc3545';
    } else {
        input.style.borderColor = '#ddd';
    }
    
    return isValid;
}
</script>